import { createHotContext as __vite__createHotContext } from "/_nuxt/@vite/client";import.meta.hot = __vite__createHotContext("/pages/settlement/wallet-settlement.vue");import { default as __nuxt_component_0 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Checkbox.vue";
import { default as __nuxt_component_1 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Badge.vue";
import { default as __nuxt_component_2 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Input.vue";
import { default as __nuxt_component_3 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Button.vue";
import { default as __nuxt_component_4 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Calendar.vue";
import { default as __nuxt_component_5 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Popover.vue";
import { default as __nuxt_component_6 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/DropdownMenu.vue";
import { default as __nuxt_component_7 } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/components/Table.vue";
import { recordPosition as _tracerRecordPosition } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vite-plugin-vue-tracer/dist/client/record.mjs?v=54abfa04"
import { defineComponent as _defineComponent } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vue/dist/vue.runtime.esm-bundler.js?v=54abfa04";
import { h, ref, computed, onMounted, shallowRef, watch, resolveComponent } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vue/dist/vue.runtime.esm-bundler.js?v=54abfa04";
import { useClipboard } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/.cache/vite/client/deps/@vueuse_core.js?v=54abfa04";
import { useRouter } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vue-router/dist/vue-router.mjs?v=54abfa04";
import { CalendarDate, DateFormatter, getLocalTimeZone } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/.cache/vite/client/deps/@internationalized_date.js?v=54abfa04";
import { useSupplierApi } from "/_nuxt/composables/api/useSupplierApi.ts";

import { useToast } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/@nuxt/ui/dist/runtime/composables/useToast.js?v=54abfa04";
import { useTemplateRef } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vue/dist/vue.runtime.esm-bundler.js?v=54abfa04";
const _sfc_main = /* @__PURE__ */ _defineComponent({
  __name: "wallet-settlement",
  setup(__props, { expose: __expose }) {
    __expose();
    const { getSuppliers, getCPOsBySuppliers } = useSupplierApi();
    const router = useRouter();
    const { copy } = useClipboard();
    const toast = useToast();
    const table = useTemplateRef("table");
    const search = ref("");
    const startDate = ref("");
    const endDate = ref("");
    const suppliers = ref([]);
    const errorMsg = ref("");
    const loading = ref(false);
    const fetchData = async () => {
      loading.value = true;
      const suppliersRes = await getSuppliers();
      loading.value = false;
    };
    onMounted(fetchData);
    const data = ref;
    const df = new DateFormatter("en-US", { dateStyle: "medium" });
    const modelValue = shallowRef({
      start: new CalendarDate(2024, 6, 1),
      end: new CalendarDate(2024, 6, 30)
    });
    watch(modelValue, (val) => {
      startDate.value = val.start?.toDate(getLocalTimeZone()).toISOString().slice(0, 10) || "";
      endDate.value = val.end?.toDate(getLocalTimeZone()).toISOString().slice(0, 10) || "";
    });
    const fetchSettlementHistory = async () => {
      loading.value = true;
      try {
        const payload = {
          page: 1,
          limit: 100,
          startDate: startDate.value || void 0,
          endDate: endDate.value || void 0
          // status: 'paid', // Optional filter if needed
        };
        const resp = await getSettlementHistory(payload);
        da.value = resp?.records ?? [];
      } catch (error) {
        console.error("Error loading settlement history:", error.message);
        errorMsg.value = error.message || "Failed to load settlement history.";
      } finally {
        loading.value = false;
      }
    };
    const filteredData = computed(
      () => data.value.filter((item) => {
        const matchSearch = item.settledBy.toLowerCase().includes(search.value.toLowerCase());
        const matchStart = !startDate.value || item.date >= startDate.value;
        const matchEnd = !endDate.value || item.date <= endDate.value;
        return matchSearch && matchStart && matchEnd;
      })
    );
    const onGenerateSettlement = () => {
      router.push("/settlement/generatereport");
    };
    const exportItems = [
      { label: "PDF", icon: "i-lucide-file-text", click: () => toast.add({ title: "Exported as PDF" }) },
      { label: "Excel", icon: "i-lucide-file-spreadsheet", click: () => toast.add({ title: "Exported as Excel" }) },
      { label: "CSV", icon: "i-lucide-file-csv", click: () => toast.add({ title: "Exported as CSV" }) }
    ];
    const columns = [
      {
        id: "select",
        header: ({ table: table2 }) => _tracer(155,6,h(__nuxt_component_0, {
          "modelValue": table2.getIsSomePageRowsSelected() ? "indeterminate" : table2.getIsAllPageRowsSelected(),
          "onUpdate:modelValue": (value) => table2.toggleAllPageRowsSelected(!!value),
          "aria-label": "Select all"
        })),
        cell: ({ row }) => _tracer(164,6,h(__nuxt_component_0, {
          "modelValue": row.getIsSelected(),
          "onUpdate:modelValue": (value) => row.toggleSelected(!!value),
          "aria-label": "Select row"
        })),
        enableSorting: false,
        enableHiding: false
      },
      { accessorKey: "id", header: "Settlement ID", cell: ({ row }) => row.getValue("id") },
      {
        accessorKey: "date",
        header: "Settlement Date",
        cell: ({ row }) => new Date(row.getValue("date")).toLocaleDateString()
      },
      { accessorKey: "totalSupplier", header: "Total Supplier" },
      {
        accessorKey: "totalAmount",
        header: "Total Amount",
        cell: ({ row }) => _tracer(183,23,h("div", { class: "text-right font-medium" }, `$${row.getValue("totalAmount")}`))
      },
      { accessorKey: "settledBy", header: "Settled By" },
      {
        accessorKey: "status",
        header: "Status",
        cell: ({ row }) => {
          const color = {
            paid: "success",
            failed: "error",
            refunded: "warning"
          }[row.getValue("status")];
          return _tracer(196,13,h(__nuxt_component_1, {
            color,
            variant: "subtle",
            class: "capitalize"
          }, () => row.getValue("status")));
        }
      }
    ];
    const __returned__ = { getSuppliers, getCPOsBySuppliers, router, copy, toast, table, search, startDate, endDate, suppliers, errorMsg, loading, fetchData, data, df, modelValue, fetchSettlementHistory, filteredData, onGenerateSettlement, exportItems, columns, get getLocalTimeZone() {
      return getLocalTimeZone;
    } };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createElementVNode as _createElementVNode } from "/_nuxt/@fs/D:/Bill24/b24managementportal/node_modules/vue/dist/vue.runtime.esm-bundler.js?v=54abfa04";
const _hoisted_1 = { class: "flex flex-col h-full w-full space-y-4 overflow-hidden" };
const _hoisted_2 = { class: "flex flex-wrap items-center justify-between gap-2 px-4 py-4 bg-white dark:bg-gray-900 rounded shadow" };
const _hoisted_3 = { class: "flex flex-wrap items-center gap-2" };
const _hoisted_4 = { class: "flex items-center gap-2" };
const _hoisted_5 = { class: "px-4 py-3.5 text-sm text-muted" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_UInput = __nuxt_component_2;
  const _component_UButton = __nuxt_component_3;
  const _component_UCalendar = __nuxt_component_4;
  const _component_UPopover = __nuxt_component_5;
  const _component_UDropdownMenu = __nuxt_component_6;
  const _component_UTable = __nuxt_component_7;
  return _openBlock(), _tracer(2,2,_createElementBlock("div", _hoisted_1, [
    _createCommentVNode(" Header "),
    _tracer(4,4,_createElementVNode("div", _hoisted_2, [
      _tracer(5,6,_createElementVNode("div", _hoisted_3, [
        _tracer(6,8,_createVNode(_component_UInput, {
          modelValue: $setup.search,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $setup.search = $event),
          placeholder: "Search by settler...",
          class: "w-64"
        }, null, 8, ["modelValue"])),
        _tracer(7,8,_createVNode(_component_UPopover, null, {
          content: _withCtx(() => [
            _tracer(24,12,_createVNode(_component_UCalendar, {
              modelValue: $setup.modelValue,
              "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => $setup.modelValue = $event),
              class: "p-2",
              "number-of-months": 2,
              range: ""
            }, null, 8, ["modelValue"]))
          ]),
          default: _withCtx(() => [
            _tracer(8,10,_createVNode(_component_UButton, {
              color: "neutral",
              variant: "subtle",
              icon: "i-lucide-calendar"
            }, {
              default: _withCtx(() => [
                $setup.modelValue.start ? (_openBlock(), _tracer(9,12,_createElementBlock(
                  _Fragment,
                  { key: 0 },
                  [
                    $setup.modelValue.end ? (_openBlock(), _tracer(10,14,_createElementBlock(
                      _Fragment,
                      { key: 0 },
                      [
                        _createTextVNode(
                          _toDisplayString($setup.df.format($setup.modelValue.start.toDate($setup.getLocalTimeZone()))) + " - " + _toDisplayString($setup.df.format($setup.modelValue.end.toDate($setup.getLocalTimeZone()))),
                          1
                          /* TEXT */
                        )
                      ],
                      64
                      /* STABLE_FRAGMENT */
                    ))) : (_openBlock(), _tracer(14,14,_createElementBlock(
                      _Fragment,
                      { key: 1 },
                      [
                        _createTextVNode(
                          _toDisplayString($setup.df.format($setup.modelValue.start.toDate($setup.getLocalTimeZone()))),
                          1
                          /* TEXT */
                        )
                      ],
                      64
                      /* STABLE_FRAGMENT */
                    )))
                  ],
                  64
                  /* STABLE_FRAGMENT */
                ))) : (_openBlock(), _tracer(18,12,_createElementBlock(
                  _Fragment,
                  { key: 1 },
                  [
                    _createTextVNode(" Pick a date ")
                  ],
                  64
                  /* STABLE_FRAGMENT */
                )))
              ]),
              _: 1
              /* STABLE */
            }))
          ]),
          _: 1
          /* STABLE */
        }))
      ])),
      _tracer(28,6,_createElementVNode("div", _hoisted_4, [
        _tracer(29,8,_createVNode(_component_UButton, {
          color: "primary",
          icon: "i-lucide-play",
          onClick: $setup.onGenerateSettlement
        }, {
          default: _withCtx(() => _cache[2] || (_cache[2] = [
            _createTextVNode(" Generate Settlement ")
          ])),
          _: 1,
          __: [2]
        })),
        _tracer(32,8,_createVNode(_component_UDropdownMenu, {
          items: $setup.exportItems,
          content: { align: "end" }
        }, {
          default: _withCtx(() => [
            _tracer(33,10,_createVNode(_component_UButton, {
              icon: "i-lucide-download",
              "trailing-icon": "i-lucide-chevron-down"
            }, {
              default: _withCtx(() => _cache[3] || (_cache[3] = [
                _createTextVNode("Export")
              ])),
              _: 1,
              __: [3]
            }))
          ]),
          _: 1
          /* STABLE */
        }))
      ]))
    ])),
    _createCommentVNode(" Table "),
    _tracer(39,4,_createVNode(_component_UTable, {
      ref: "table",
      data: $setup.filteredData,
      columns: $setup.columns,
      sticky: "",
      class: "flex-1 overflow-auto"
    }, null, 8, ["data"])),
    _createCommentVNode(" Table Footer "),
    _tracer(42,4,_createElementVNode(
      "div",
      _hoisted_5,
      _toDisplayString($setup.table?.tableApi?.getFilteredSelectedRowModel().rows.length || 0) + " of " + _toDisplayString($setup.table?.tableApi?.getFilteredRowModel().rows.length || 0) + " row(s) selected. ",
      1
      /* TEXT */
    ))
  ]));
}
_sfc_main.__hmrId = "ce2af295";
typeof __VUE_HMR_RUNTIME__ !== "undefined" && __VUE_HMR_RUNTIME__.createRecord(_sfc_main.__hmrId, _sfc_main);
import.meta.hot.on("file-changed", ({ file }) => {
  __VUE_HMR_RUNTIME__.CHANGED_FILE = file;
});
import.meta.hot.accept((mod) => {
  if (!mod) return;
  const { default: updated, _rerender_only } = mod;
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(updated.__hmrId, updated.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(updated.__hmrId, updated);
  }
});
import _export_sfc from "/_nuxt/@id/__x00__plugin-vue:export-helper";
export default /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "D:/Bill24/b24managementportal/app/pages/settlement/wallet-settlement.vue"]]);

function _tracer(line, column, vnode) { return _tracerRecordPosition("app/pages/settlement/wallet-settlement.vue", line, column, vnode) }

//# sourceMappingURL=data:application/json;base64,